import Head from 'next/head'
import { Inter } from '@next/font/google'
import ArticlesList from '@/components/articles-list'
import { FormEvent, useEffect, useRef, useState } from 'react'
import Link from 'next/link'
import { Button, Container, Heading, Input, Spinner, Stack } from '@chakra-ui/react'
import { fetchArticles } from '@/api/articles'
import { NextPageContext } from 'next'
import { useRouter } from 'next/router'

export default function Home({ articles }: { articles: any[] }) {
  const router = useRouter();
  const searchInput = useRef<HTMLInputElement | null>(null);
  const [inputValue, setInputValue] = useState('Machine Learning');
  const [isLoading, setIsLoading] = useState(false);

  const handleSearch = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault()
    setIsLoading(true)
    router.push({
      pathname: '',
      query: {
        search: searchInput.current?.value.trim().toLowerCase().split(" ").join("-")
      }
    }, '/', { shallow: false })
    setInputValue(searchInput.current?.value ?? '')
  }

  useEffect(() => {
    setIsLoading(false)
  }, [articles])

  return (
    <>
      <Head>
        <title>Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxW='1260px'>
        <Link href="/create"><Button colorScheme='teal' my={8} variant='ghost'>Create Article</Button></Link>
        <Link href="/me"><Button colorScheme='teal' my={8} variant='ghost'>Articles From Me</Button></Link>
        <Stack spacing={12}>
          <form onSubmit={handleSearch}>
            <Stack direction="row">
              <Input ref={searchInput} placeholder='Type a keyword' defaultValue={inputValue} />
              <Button type="submit" colorScheme='teal' variant='outline'>Search</Button>
            </Stack>
          </form>
          <Heading as='h1' noOfLines={1} textAlign="center">
            Articles about <i>&quot;{inputValue}&quot;</i>
          </Heading>
          {!isLoading ? <ArticlesList data={articles} /> : <Stack alignItems="center" justifyContent="center"><Spinner color="teal" size='xl' /></Stack>}
        </Stack>
      </Container>
    </>
  )
}

export const getServerSideProps = async ({ query }: NextPageContext) => {
  const response = await fetchArticles(query?.search as string ?? undefined);

  return {
    props: {
      articles: response['organic_results'] ?? [],
    }
  }
}
